import pandas as pd
import os
from datetime import datetime
from docxtpl import DocxTemplate
from docx2pdf import convert

def format_date(val):
    if pd.isnull(val):
        return '‚Äî'
    if isinstance(val, datetime):
        if val.time() == datetime.min.time():
            return val.strftime('%d.%m.%Y')
        elif val.second == 0:
            return val.strftime('%d.%m.%Y %H:%M')
        else:
            return val.strftime('%d.%m.%Y %H:%M:%S')
    return str(val)

def format_number(val):
    if pd.isnull(val):
        return '‚Äî'
    if isinstance(val, (int, float)):
        return "{:,.2f}".format(val).replace(",", " ").replace(".", ",")
    return str(val)

# === 1. –í–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ===
credits_path = input("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∫—Ä–µ–¥–∏—Ç—ñ–≤ (credits.xlsx): ").strip() or "credits.xlsx"
payments_path = input("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –ø–ª–∞—Ç–µ–∂—ñ–≤ (payments.xlsx): ").strip() or "payments.xlsx"
template_path = input("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ —à–∞–±–ª–æ–Ω—É Word (template.docx): ").strip() or "template.docx"
output_dir = input("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É (output_docs): ").strip() or "output_docs"

save_format = input("–£ —è–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏? (docx/pdf/both): ").strip().lower() or "both"
common_column = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–≤–ø—Ü—è –¥–ª—è –æ–±'—î–¥–Ω–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å (id): ").strip()
file_name_column = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å—Ç–æ–≤–ø—Ü—è –¥–ª—è —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É (–ö–î –∞–±–æ –ü–Ü–ë): ").strip()

# === 2. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∞—Ç—ñ–≤ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ===
save_docx = save_format in ("docx", "both")
save_pdf = save_format in ("pdf", "both")

# === 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–æ–∫ ===
os.makedirs(output_dir, exist_ok=True)
pdf_output_dir = os.path.join(output_dir, "pdfs")
if save_pdf:
    os.makedirs(pdf_output_dir, exist_ok=True)

# === 4. –ß–∏—Ç–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—ñ–≤ ===
credits_df = pd.read_excel(credits_path)
payments_df = pd.read_excel(payments_path)

# –û—á–∏—â–µ–Ω–Ω—è –Ω–∞–∑–≤ —Å—Ç–æ–≤–ø—Ü—ñ–≤ –≤—ñ–¥ –ø—Ä–æ–±—ñ–ª—ñ–≤
credits_df.columns = credits_df.columns.str.strip()
payments_df.columns = payments_df.columns.str.strip()

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–≤–ø—Ü—è
if common_column not in credits_df.columns or common_column not in payments_df.columns:
    raise ValueError(f"–°–ø—ñ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–≤–ø—Ü—è '{common_column}' –Ω–µ–º–∞—î –≤ –æ–¥–Ω—ñ–π —ñ–∑ —Ç–∞–±–ª–∏—Ü—å. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ.")

# –ó–ª–∏—Ç—Ç—è –¥–∞–Ω–∏—Ö
merged_df = pd.merge(payments_df, credits_df, on=common_column, how="left", suffixes=('_payment', '_credit'))

# –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è
grouped = merged_df.groupby(common_column)

# === 5. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö DOCX ===
created_docx_files = []

for borrower_id, group in grouped:
    borrower_info = group.iloc[0]

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    context = {}

    # –î–∞–Ω—ñ –∑ –∫—Ä–µ–¥–∏—Ç—ñ–≤
    for col in credits_df.columns:
        val = borrower_info[col]
        if isinstance(val, (int, float)):
            context[f"{col}_credit"] = format_number(val)
        elif isinstance(val, datetime):
            context[f"{col}_credit"] = format_date(val)
        else:
            context[f"{col}_credit"] = val if pd.notnull(val) else "‚Äî"

    # –î–∞–Ω—ñ –∑ –ø–ª–∞—Ç–µ–∂—ñ–≤
    payment_rows = []
    payment_columns = [col for col in payments_df.columns if col != common_column]
    for _, row in group.iterrows():
        row_data = {}
        for col in payment_columns:
            val = row[col]

            if isinstance(val, (int, float)):
                val = format_number(val)
            elif isinstance(val, datetime):
                val = format_date(val)
            elif pd.isnull(val):
                val = "‚Äî"

            row_data[f"{col}_payment"] = val

        payment_rows.append(row_data)

    context["payments_table"] = payment_rows

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—É
    tpl = DocxTemplate(template_path)
    tpl.render(context)

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É
    safe_name = str(borrower_info.get(file_name_column, borrower_id)).replace(" ", "_")
    docx_filename = os.path.join(output_dir, f"doc_{safe_name}.docx")

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è DOCX
    tpl.save(docx_filename)
    created_docx_files.append(docx_filename)

print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ {len(created_docx_files)} DOCX –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.")

# === 6. –ú–∞—Å–æ–≤–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —É PDF ===
if save_pdf:
    print("\nüìÑ –ü–æ—á–∏–Ω–∞—î–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é DOCX –≤ PDF...")
    try:
        # convert(–ø–∞–ø–∫–∞_–∑_DOCX, –ø–∞–ø–∫–∞_–∫—É–¥–∏_–∑–±–µ—Ä–µ–≥—Ç–∏_PDF)
        convert(output_dir, pdf_output_dir)
        print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–æ –≤—Å—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —É –ø–∞–ø–∫—É: {pdf_output_dir}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –º–∞—Å–æ–≤—ñ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó —É PDF: {e}")

print("\nüèÅ –†–æ–±–æ—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
